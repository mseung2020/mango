# 챗봇용 FAQ와 답변(프로토타입: 모든 프로필 동일 응답)
FAQS = [
    {"id": "recall",   "text": "최근 배터리 화재·리콜 이슈는?"},
    {"id": "notice",   "text": "내 모델 관련 안전 공지는?"},
    {"id": "lifetips", "text": "배터리 수명 유지 팁은?"},
    {"id": "charge",   "text": "충전 습관 최적화 방법은?"},
]

# 프로토타입 답변(간결 버전). 추후 profile_id별로 분기 가능.
ANSWERS_GENERAL = {
    "recall": (
        "최근 4주 내 EV 배터리 **화재/리콜 보도**가 간헐적으로 확인되었습니다.\n"
        "- 중대 이슈는 **제조사/정부 공식 공지** 기준으로만 확정 처리\n"
        "- 동일 기사 묶음은 **군집화**하여 1회 알림\n"
        "- 필요 시 **즉시 조치 가이드**를 함께 제공합니다"
    ),
    "notice": (
        "해당 모델의 **안전 공지 요약**입니다.\n"
        "- BMS 업데이트 권고(안전 패치 포함)\n"
        "- 급속충전 시 **온도 상승 구간 모니터링** 권장\n"
        "- 증상이 지속되면 **무상 점검 예약**을 추천합니다"
    ),
    "lifetips": (
        "배터리 수명 유지 팁:\n"
        "1) **90% 이하 충전**을 기본으로 유지\n"
        "2) 고온/혹한 시 **속도·급가속 최소화**\n"
        "3) 장기 주차는 **SOC 40~60%** 권장"
    ),
    "charge": (
        "충전 습관 최적화:\n"
        "- 급속은 **필요 시에만**, 80% 부근에서 종료\n"
        "- 연속 급속 빈도 낮추기(셀 온도 관리)\n"
        "- 저녁/새벽 **완속 충전**으로 비용·열관리 동시 개선"
    ),
}

def answer_for(profile_id: str, qid: str) -> str:
    # 추후 profile_id에 따라 다른 답변 반환하도록 확장 가능
    return ANSWERS_GENERAL.get(qid, "해당 질문에 대한 답변을 준비 중입니다.")
AL.get(qid, "해당 질문에 대한 답변을 준비 중입니다.")
